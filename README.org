
* File-Local-Variable  - File-local variable independent from ASDF

Implements a file-local variable using a carefully designed file-reloading scheme.

#+BEGIN_SRC lisp

(defpackage file-local-variable.example
  (:use :cl))

(in-package :file-local-variable.example)

(defun myhook (macrofn form env)
  (print form)
  (funcall macrofn form env))

(flv:file-local-bind *macroexpand-hook* #'myhook)

(print *macroexpand-hook*)

(flv:file-local-unbind)

#+END_SRC

** How It Works

1. =flv:file-local-bind= dynamically binds the variable using =progv= or
   =let*=, and reread/recompile the current =*compile-pathanme*= using a
   custom reader.
2. Reread the file as follows:
   1. Skip the forms until the first appearance of =flv:file-local-bind=.
   2. Read, then macroexpand or evaluate the rest of the forms.
   3. Ensure the last form is =flv:file-local-unbind=, or signals an error.
3. =flv:file-local-bind= expands into a =progn= containing the expansion
   results of the reread forms.
4. Skips the rest of the forms.
5. Finally, =flv:file-local-unbind= which is ensured to exist in the file
   as the last form, restore the bound variables and =*read-suppress*=.

** Dependencies

This library is at least tested on implementation listed below:

+ SBCL 1.3.2 on X86-64 Linux  3.19.0-49-generic (author's environment)

Also, it depends on the following libraries:

+ iterate by  ::
    Jonathan Amsterdam's iterator/gatherer/accumulator facility

+ alexandria by  ::
    Alexandria is a collection of portable public domain utilities.

+ trivia  ::
    



** Installation


** Author

+ Masataro Asai (guicho2.71828@gmail.com)

* Copyright

Copyright (c) 2016 Masataro Asai (guicho2.71828@gmail.com)


* License

Licensed under the LLGPL License.



